plugins {
    id 'java'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id "org.jsonschema2pojo" version "${jsonSchemaPojoGenerateVersion}"
}

group = 'pl.dudi'
version = '1.0.0'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${openApiStartedVersion}"

    implementation "javax.validation:validation-api:${javaxValidationApi}"
    implementation "jakarta.validation:jakarta.validation-api:${jakartaValidationApi}"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'

    testImplementation "org.wiremock:wiremock-standalone:${wiremockVersion}"
    testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"

}


jsonSchema2Pojo {
    Provider<Directory> output = layout.buildDirectory.dir("/generated-sources/js2p/githubapi")
    targetDirectory = file(output.get().asFile)
    targetPackage = "github.api.responses"
    generateBuilders = true
    setSource(files("$projectDir/src/main/resources/schemas"))
    includeGeneratedAnnotation = true
}

tasks.named('test') {
    useJUnitPlatform()
}
compileJava.options.encoding = 'UTF-8'
